#+title: tlon - URL Handling
#+author: Pablo Stafforini
#+EXCLUDE_TAGS: noexport
#+language: en
#+options: ':t toc:nil author:t email:t num:t
#+startup: content
#+texinfo_header: @set MAINTAINERSITE @uref{https://github.com/tlon-team/tlon,maintainer webpage}
#+texinfo_header: @set MAINTAINER Pablo Stafforini
#+texinfo_header: @set MAINTAINEREMAIL @email{pablo@tlon.team}
#+texinfo_header: @set MAINTAINERCONTACT @uref{mailto:pablo@tlon.team,contact the maintainer}
#+texinfo: @insertcopying
* URL Handling (=tlon-url.el=)
:PROPERTIES:
:CUSTOM_ID: h:tlon-url
:END:

This module provides tools for checking dead URLs within files and replacing URLs across multiple Tlön content repositories. It integrates with the external =linkchecker= command-line tool and the Wayback Machine (web.archive.org).

** Dependencies
:PROPERTIES:
:CUSTOM_ID: h:tlon-url-dependencies
:END:

+ =tlon-core=
+ =transient=
+ =json= (Built-in Emacs 27.1+, or package)
+ =cl-lib= (Built-in)
+ =ffap= (Find File At Point, built-in)
+ =lychee= (External command-line tool for ~tlon-lychee-fix-dead-links~ and ~tlon-check-urls-in-file~)

** Commands
:PROPERTIES:
:CUSTOM_ID: h:tlon-url-commands
:END:

*** List dead URLs in File
:PROPERTIES:
:CUSTOM_ID: h:tlon-check-urls-in-file-cmd
:END:
#+findex: tlon-list-dead-urls-in-file
The command ~tlon-check-urls-in-file~ (Autoloaded) checks all URLs found in a specified =FILE= (or the current buffer's file) for dead links using the external =lychee= tool. It delegates to the internal helper ~tlon-lychee--check-urls~, which runs `lychee` on the given file within an =eshell= buffer, displaying the results there.

*** List dead URLs in Repo
:PROPERTIES:
:CUSTOM_ID: h:tlon-check-urls-in-repo-cmd
:END:
#+findex: tlon-list-dead-urls-in-repo
The command ~tlon-list-dead-urls-in-repo~ (Autoloaded) checks all URLs in the current repository for dead links using the external =lychee= tool.
1. It determines the current repository root.
2. It prompts the user whether to get the output in JSON format.
3. It calls the internal function ~tlon-lychee--check-urls~, targeting the whole repository (`.`).
4. This opens an eshell buffer and runs `lychee`, displaying the output.

*** Get Archived URL
:PROPERTIES:
:CUSTOM_ID: h:tlon-get-archived-cmd
:END:
#+findex: tlon-get-archived
The command ~tlon-get-archived~ (Autoloaded) fetches the latest working archived version of a given =URL= from the Wayback Machine and copies the archived URL to the kill ring.
1. Prompts for the =URL=, defaulting to the URL at point (~thing-at-point 'url t~).
2. Calls the internal function ~tlon--get-wayback-machine-url~ to fetch the archive URL.
3. If an archive URL is found, it's displayed in a message and copied to the kill ring using =kill-new=.
4. If no archive is found or an error occurs, an appropriate message is displayed.

*** Get Earliest Archived URL
:PROPERTIES:
:CUSTOM_ID: h:tlon-get-earliest-archived-cmd
:END:
#+findex: tlon-get-earliest-archived
The command ~tlon-get-earliest-archived~ (Autoloaded) fetches the earliest
working archived version of a given =URL= from the Wayback Machine and copies
the archived URL to the kill ring.
1. Prompts for the =URL=, defaulting to the URL at point
   (~thing-at-point 'url t~).
2. Calls the internal function
   ~tlon--get-earliest-wayback-machine-url~ to fetch the archive URL sorted
   chronologically.
3. If an archive URL is found, it's displayed in a message and copied to the
   kill ring using =kill-new=.
4. If no archive is found or an error occurs, an appropriate message is
   displayed.

*** Replace URL Across Projects
:PROPERTIES:
:CUSTOM_ID: h:tlon-replace-url-across-projects-cmd
:END:
#+findex: tlon-replace-url-across-projects
The command ~tlon-replace-url-across-projects~ performs a search-and-replace operation for URLs across all files within Tlön content repositories (both originals and translations).
1. Prompts for the =URL-DEAD= (the URL to replace), defaulting to the URL at point.
2. Prompts for the =URL-LIVE= (the replacement URL).
3. Gathers a list of all repository directories marked as =type= 'content using ~tlon-repo-lookup-all~.
4. Recursively finds all files within these directories using =directory-files-recursively=.
5. Iterates through each regular file:
   - Reads the file content into a temporary buffer.
   - Checks if =URL-DEAD= exists in the buffer.
   - If found:
     - Increments a replacement counter.
     - Records the directory of the affected file.
     - Performs a global search-and-replace within the temporary buffer, replacing all occurrences of =URL-DEAD= with =URL-LIVE=.
     - Writes the modified content back to the original file.
6. After processing all files, displays a message indicating the total number of replacements made and the unique directories affected.

*** Transient Menu
:PROPERTIES:
:CUSTOM_ID: h:tlon-url-menu-cmd
:END:
#+findex: tlon-url-menu
The command ~tlon-url-menu~ (Autoloaded) activates a =transient= menu interface for URL-related operations.

It provides the following options under the "" (main) group:
+ =a= :: Get archived URL (~tlon-get-archived~)
+ =d= :: Fix dead URLs in file (~tlon-fix-dead-urls-in-file~)
+ =f= :: List dead URLs in file (~tlon-list-dead-urls-in-file~)
+ =l= :: Fix dead URLs in repo (~tlon-fix-dead-urls-in-repo~)
+ =r= :: List dead URLs in repo (~tlon-list-dead-urls-in-repo~)
+ =p= :: Replace URL across projects (~tlon-replace-url-across-projects~)

** Internal Functions and Variables
:PROPERTIES:
:CUSTOM_ID: h:tlon-url-internals
:END:

This section lists non-interactive functions used internally or potentially useful for advanced customization.

#+findex: tlon-get-urls-in-file
+ ~tlon-get-urls-in-file~ :: Extracts a list of unique URLs from a given =FILE= (or the current buffer's file). The method of extraction depends on the file type. For Markdown files, it searches for URLs using =browse-url-button-regexp=. For BibTeX files, it extracts the content of the =url= field from each entry. For other file types, it defaults to the Markdown method.

#+findex: tlon-get-urls-in-dir
+ ~tlon-get-urls-in-dir~ :: Recursively finds all files with a specific =EXTENSION= (defaulting to "md") within a given =DIR= (defaulting to the current repository) and returns a combined list of all unique URLs found within those files by calling ~tlon-get-urls-in-file~ on each.

#+findex: tlon-save-list-of-urls
+ ~tlon-save-list-of-urls~ :: Takes a list of =URLS=, creates a temporary file, writes the URLs (one per line) prefixed with a =# LinkChecker URL list= header, and returns the path to the temporary file. (Note: This function seems unused within the current module).

#+findex: tlon-lychee--check-urls
+ ~tlon-lychee--check-urls~ :: Takes a =TARGET= (file path or ".") and an optional =JSON= flag. It ensures `lychee` is available, opens an =eshell= buffer, and executes `lychee` against the target with a standard set of accepted status codes.

*** Fix Dead URLs in Repo
:PROPERTIES:
:CUSTOM_ID: h:tlon-lychee-fix-dead-links-cmd
:END:
#+findex: tlon-fix-dead-urls-in-repo
The command ~tlon-fix-dead-urls-in-repo~ (Autoloaded) automates finding and fixing dead links using =lychee= and the Wayback Machine.
1. Identifies the current project's root directory using ~tlon-get-repo~.
2. Ensures the =lychee= executable is found.
3. Constructs the =lychee= command to scan all supported files in the project, outputting in JSON format and redirecting stderr to a temporary file.
4. Calls ~tlon-lychee--run-and-process~ to execute =lychee= asynchronously.
The subsequent processing, including parsing output, finding archived URLs, and replacing links, is handled by a chain of internal helper functions (see below).

** Internal Functions and Variables
:PROPERTIES:
:CUSTOM_ID: h:tlon-url-internals
:END:

This section lists non-interactive functions used internally or potentially useful for advanced customization.

#+findex: tlon--get-wayback-machine-url
+ ~tlon--get-wayback-machine-url~ :: Takes a =URL= string and a =CALLBACK= function. It asynchronously fetches the latest working archived version of the =URL= from the Wayback Machine's CDX API. The =CALLBACK= is then called with two arguments: the =ARCHIVE-URL= (or =nil= if not found or on error) and the =ORIGINAL-URL=.

#+findex: tlon-lychee-replace-in-file
+ ~tlon-lychee-replace-in-file~ :: Takes a =FILE-PATH=, an =OLD-URL=, and a =NEW-URL=. It reads the content of =FILE-PATH=, replaces all occurrences of =OLD-URL= with =NEW-URL=, and writes the modified content back to the file. Returns =t= if any replacements were made, =nil= otherwise. =OLD-URL= is escaped for literal matching.

#+findex: tlon-lychee--run-and-process
+ ~tlon-lychee--run-and-process~ :: Takes =CMD-STRING=, =STDOUT-BUFFER=, =STDERR-FILE=, and =REPO-DIR=. Runs the =lychee= command asynchronously and sets a process sentinel to call ~tlon-lychee--handle-completion~.

#+findex: tlon-lychee--handle-completion
+ ~tlon-lychee--handle-completion~ :: Called by the process sentinel from ~tlon-lychee--run-and-process~. It retrieves stdout and stderr content, cleans up temporary resources, parses the JSON output from =lychee=, and calls ~tlon-lychee--process-parsed-report~. Handles errors related to process failure or JSON parsing.

#+findex: tlon-lychee--process-parsed-report
+ ~tlon-lychee--process-parsed-report~ :: Takes the parsed =REPORT=, =REPO-DIR=, and =STDERR-CONTENT=. It initializes counters for replacements and processed links, calls ~tlon-lychee--count-dead-links-in-report~ to get the total number of dead links. If dead links are found, it messages the user and calls ~tlon-lychee--iterate-and-attempt-fixes~. Otherwise, it reports that no dead links were found.

#+findex: tlon-lychee--count-dead-links-in-report
+ ~tlon-lychee--count-dead-links-in-report~ :: Takes the parsed =REPORT= from =lychee=. It iterates through the report and returns the total count of links that are not "Ok", "Cached(Ok...)", or "Excluded".

#+findex: tlon-lychee--iterate-and-attempt-fixes
+ ~tlon-lychee--iterate-and-attempt-fixes~ :: Takes the =REPORT=, =REPO-DIR=, =TOTAL-DEAD-LINKS= count, and references to counters for replacements and processed links, along with =STDERR-CONTENT=. It iterates through each file entry and link status in the report. For each dead link, it calls ~tlon-lychee--attempt-single-fix~.

#+findex: tlon-lychee--attempt-single-fix
+ ~tlon-lychee--attempt-single-fix~ :: Takes =FULL-FILE-PATH=, relative =FILENAME=, the =TARGET-URL= (dead link), =TOTAL-DEAD-LINKS= count, and references to counters and =STDERR-CONTENT=. It calls ~tlon--get-wayback-machine-url~ for the =TARGET-URL=, providing ~tlon-lychee--handle-wayback-response~ as the callback.

#+findex: tlon-lychee--handle-wayback-response
+ ~tlon-lychee--handle-wayback-response~ :: Callback function for ~tlon--get-wayback-machine-url~. Takes =ARCHIVE-URL=, =ORIGINAL-DEAD-URL=, file path information, total dead links count, counter references, and =STDERR-CONTENT=. It increments the processed links counter. If an =ARCHIVE-URL= is found, it attempts to replace the =ORIGINAL-DEAD-URL= in the file using ~tlon-lychee-replace-in-file~ and increments the replacements counter if successful. It logs messages about the outcome. When all dead links have been processed, it prints a final summary message, including any stderr output from =lychee=.

