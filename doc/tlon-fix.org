#+title: tlon - Manual & Automatic Fixes
#+author: Pablo Stafforini
#+EXCLUDE_TAGS: noexport
#+language: en
#+options: ':t toc:nil author:t email:t num:t
#+startup: content
#+texinfo_header: @set MAINTAINERSITE @uref{https://github.com/tlon-team/tlon,maintainer webpage}
#+texinfo_header: @set MAINTAINER Pablo Stafforini
#+texinfo_header: @set MAINTAINEREMAIL @email{pablo@tlon.team}
#+texinfo_header: @set MAINTAINERCONTACT @uref{mailto:pablo@tlon.team,contact the maintainer}
#+texinfo: @insertcopying
* Manual & Automatic Fixes (=tlon-fix.el=)
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix
:END:

This module provides functions for applying automated and manual fixes to text content, particularly focusing on common typographical issues, formatting inconsistencies, and language-specific corrections within the Tlön project. It distinguishes between automatic fixes (applied without user intervention) and manual fixes (which prompt the user before each change).

** Automatic Fix Functions (`tlon-autofix-*`)
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-autofix
:END:

These functions apply corrections automatically, typically intended for use in hooks (like `after-save-hook`) or batch processing.

#+findex: tlon-autofix-all
+ ~tlon-autofix-all~ :: Executes all defined automatic fix functions in sequence on the current buffer:
  - ~tlon-autofix-curly-quotes~
  - ~tlon-autofix-footnote-punctuation~
  - ~tlon-autofix-periods-in-headings~
  - ~tlon-autofix-percent-signs~
  - ~tlon-autofix-replace-thousands-separators~
  - ~tlon-autofix-thin-spaces~
  - ~tlon-autofix-superscripts~
  It is designed to be run from `after-save-hook`. To prevent infinite loops, it temporarily removes itself from the hook, saves the buffer (applying the fixes), and then re-adds itself to the hook.

#+findex: tlon-autofix-curly-quotes
+ ~tlon-autofix-curly-quotes~ :: Replaces straight double quotes (`"`) immediately preceding a square bracket (`[`) with a curly quote (`”`). This is a very specific context and might need refinement for broader curly quote replacement. Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-footnote-punctuation
+ ~tlon-autofix-footnote-punctuation~ :: Moves footnote references (`[^N]`) to appear *after* adjacent punctuation marks (`,`, `.`, `:`, `;`, `?`, `!`) for English ("en") and Spanish ("es") text, as per common typographical conventions in those languages. It calls ~tlon-autofix-footnote-punctuation-amend~ afterwards to correct potential over-application issues with consecutive footnotes. Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-footnote-punctuation-amend
+ ~tlon-autofix-footnote-punctuation-amend~ :: Corrects specific malformed patterns like `[[^1]^2]` or `[^[^1]2]` that might be incorrectly generated by ~tlon-autofix-footnote-punctuation~ when dealing with consecutive footnotes, restoring them to the standard `[^1][^2]` format. Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-periods-in-headings
+ ~tlon-autofix-periods-in-headings~ :: Removes trailing periods (`.`) from Markdown headings (lines starting with `##` up to `######`). Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-percent-signs
+ ~tlon-autofix-percent-signs~ :: Inserts a narrow no-break space (U+202F) before percent signs (`%`) that immediately follow digits or closing parentheses. Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-thin-spaces
+ ~tlon-autofix-thin-spaces~ :: Replaces thin spaces (U+2009) with narrow no-break spaces (U+202F). Thin and narrow spaces have the same width, but the narrow no-break space prevents line breaks. Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-superscripts
+ ~tlon-autofix-superscripts~ :: Converts simple caret-based superscript notation (e.g., `^1^`) into HTML superscript tags (`<sup>1</sup>`). Uses ~tlon-autofix~ internally.

#+findex: tlon-autofix-replace-thousands-separators
+ ~tlon-autofix-replace-thousands-separators~ :: Replaces existing thousands separators (commas or periods, depending on the language context determined by ~tlon-get-thousands-separator~) with the standard narrow no-break space (~tlon-default-thousands-separator~). It intelligently avoids making replacements within math tags (`<Math>`), links (inline Markdown or URLs identified by `ffap-url-regexp`), and specific excluded phrases like "80,000 Hours". It first identifies protected ranges and then performs replacements outside these ranges using ~tlon-number-separators-perform-replacements~.

** Manual Fix Functions (`tlon-manual-fix-*`)
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-manualfix
:END:

These functions use `query-replace-regexp` to prompt the user before making each change, allowing for selective application of fixes.

#+findex: tlon-manual-fix-all
+ ~tlon-manual-fix-all~ :: Executes all defined manual fix functions sequentially in the current buffer, prompting the user for confirmation before each potential change.

#+findex: tlon-manual-fix-em-dashes
+ ~tlon-manual-fix-em-dashes~ :: Prompts the user to replace hyphens (`-`) surrounded by specific characters (indicating use as punctuation, e.g., between words or before/after spaces/punctuation) with em dashes (`—`). Uses ~tlon-manual-fix~ internally.

#+findex: tlon-manual-fix-number-ranges
+ ~tlon-manual-fix-number-ranges~ :: Prompts the user to replace hyphens used between numbers (indicating a numerical range) with en dashes (`–`). Uses ~tlon-manual-fix~ internally.

#+findex: tlon-manual-fix-roman-numerals
+ ~tlon-manual-fix-roman-numerals~ :: Prompts the user to wrap standalone Roman numerals (sequences of I, V, X, L, C, D, M found as whole words) in HTML `<abbr>` tags for semantic markup. Uses ~tlon-manual-fix~ internally.

#+findex: tlon-manual-fix-add-thousands-separators
+ ~tlon-manual-fix-add-thousands-separators~ :: Prompts the user to insert the standard thousands separator (narrow no-break space) into numerals of four or more digits that currently lack separators (matched by ~tlon-numerals-sans-separator~). This requires manual confirmation because not all long numbers (like years or identifiers) should have separators. Uses ~tlon-manual-fix~ internally.

#+findex: tlon-manual-fix-narrow-spaces
+ ~tlon-manual-fix-narrow-spaces~ :: Prompts the user to insert a narrow no-break space (U+202F) between consecutive uppercase letters where the first is followed by a period (e.g., "A.B." -> "A. B."). Uses ~tlon-manual-fix~ internally.

#+findex: tlon-manual-fix-solo
+ ~tlon-manual-fix-solo~ :: Prompts the user to replace the Spanish word "sólo" (with accent, formerly used for "only") with "solo" (without accent), preserving case. Uses ~tlon-manual-fix~ internally with case preservation.

#+findex: tlon-manual-fix-podcast
+ ~tlon-manual-fix-podcast~ :: Prompts the user to replace the English word "podcast" with the Spanish equivalent "pódcast", preserving case. Useful as spell-checkers might not suggest this. Uses ~tlon-manual-fix~ internally with case preservation.

#+findex: tlon-manual-fix-emphasis
+ ~tlon-manual-fix-emphasis~ :: Interactively prompts the user to wrap text currently emphasized with Markdown italics (`*text*` or `_text_`, matched by `markdown-regex-italic`) within custom `<emphasis level="moderate">text</emphasis>` tags. It iterates through matches and uses `yes-or-no-p` for confirmation before replacing.

#+findex: tlon-manual-fix-quote
+ ~tlon-manual-fix-quote~ :: Interactively prompts the user to wrap text enclosed in various quote marks (`"`, `“`, `'`, `‘`, `*`) within HTML `<q>text</q>` tags. It avoids wrapping text that is already inside another HTML/XML tag (checked using `thing-at-point-looking-at`). It iterates through matches and uses `yes-or-no-p` for confirmation.

#+findex: tlon-manual-fix-foreign-words
+ ~tlon-manual-fix-foreign-words~ :: (Placeholder) Intended to prompt the user to add language tags (`<lang>`) around foreign words. The implementation is currently missing.

** Language-Specific Fixes
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-lang
:END:

These functions apply sets of predefined search-and-replace rules tailored for specific languages, primarily for fixing common issues in translated texts.

#+findex: tlon-fix-translation
+ ~tlon-fix-translation~ :: Applies language-specific fixes to the current file or marked files in Dired. It determines the target LANG, looks up the corresponding fix list variable in ~tlon-fix-translations~, and calls ~tlon-fix-translation-in-file~ for each file.

#+findex: tlon-fix-french-translation
+ ~tlon-fix-french-translation~ :: Interactive command that calls ~tlon-fix-translation~ specifically for French ("fr"). The fixes applied are defined in the constant ~tlon-fix-french-translation~. These include:
  - Replacing hyphens with em dashes in specific contexts.
  - Standardizing list markers (`- [` -> `• [`)
  - Correcting common phrases ("Pour savoir plus" -> "Pour en savoir plus").
  - Adjusting spacing around punctuation (colons, semicolons, question/exclamation marks).
  - Replacing straight quotes with French guillemets (« ») including non-breaking spaces.
  - Fixing footnote/sidenote marker syntax.
  - Correcting common Markdown/HTML tag issues resulting from conversions or manual edits.

#+findex: tlon-fix-italian-translation
+ ~tlon-fix-italian-translation~ :: Interactive command that calls ~tlon-fix-translation~ specifically for Italian ("it"). The fixes applied are defined in the constant ~tlon-fix-italian-translation~. These include:
  - Replacing hyphens with em dashes.
  - Standardizing list markers.
  - Correcting common phrases ("Voci correlate .").
  - Fixing footnote/sidenote marker syntax.
  - Correcting common Markdown/HTML tag issues.

** Other Fixes
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-other
:END:

#+findex: tlon-fix-internet-archive-urls
+ ~tlon-fix-internet-archive-urls~ :: Removes the `https://web.archive.org/web/TIMESTAMP/` prefix from Internet Archive URLs found in the current buffer, effectively restoring them to their original form. Reports the number of URLs fixed.

#+findex: tlon-check-unbalanced-character
+ ~tlon-check-unbalanced-character~ :: Prompts for a character and scans the current buffer for unbalanced instances of that character. If an imbalance is found, it moves point to the first offending location and reports whether an opening or closing counterpart is missing. Supports common pairs like (), [], {}, «», “”, <> and symmetric quotes and asterisks.

#+findex: tlon-check-unbalanced-character-in-dir
+ ~tlon-check-unbalanced-character-in-dir~ :: Prompts for a character and checks all regular files in the current directory for unbalanced instances, reporting results in a buffer named "*tlon-unbalanced*". Returns non-nil if all files are balanced.

** Internal Helper Functions
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-internals
:END:

#+findex: tlon-autofix
+ ~tlon-autofix~ :: Core automatic replacement function. Iterates through a REGEXP-LIST and replaces all occurrences of each regexp with NEWTEXT in the current buffer using `replace-match` within a `while` loop and `re-search-forward`.

#+findex: tlon-manual-fix
+ ~tlon-manual-fix~ :: Core manual replacement function. Iterates through a REGEXP-LIST and uses `query-replace-regexp` to replace occurrences with NEWTEXT, prompting the user for each match. Optionally preserves case if KEEP-CASE is non-nil.

#+findex: tlon-number-separators-perform-replacements
+ ~tlon-number-separators-perform-replacements~ :: Helper function for ~tlon-autofix-replace-thousands-separators~. Performs the actual replacement of the language-specific thousands SEPARATOR with the default one (~tlon-default-thousands-separator~), but only if the match does not fall within any of the ranges specified in PROTECTED-RANGES (checked using ~tlon-is-in-protected-range-p~).

#+findex: tlon-is-in-protected-range-p
+ ~tlon-is-in-protected-range-p~ :: Helper function. Checks if a given text range (from START to END) overlaps with any of the ranges (cons cells of `start . end`) specified in the PROTECTED-RANGES list. Returns non-nil if there is an overlap.

#+findex: tlon-fix-translation-in-file
+ ~tlon-fix-translation-in-file~ :: Applies the language-specific fixes defined in the variable associated with LANG (looked up in ~tlon-fix-translations~) to the current buffer. It iterates through the `(SEARCH . REPLACE)` pairs in the language-specific variable and calls ~tlon-autofix~ for each pair. Ensures searches are case-sensitive.

** Variables and Constants
:PROPERTIES:
:CUSTOM_ID: h:tlon-fix-variables
:END:

#+vindex: tlon-fix-french-translation
+ ~tlon-fix-french-translation~ :: A constant alist of `(SEARCH-REGEXP . REPLACE-STRING)` pairs defining common fixes specific to French text. Used by ~tlon-fix-french-translation~ via ~tlon-fix-translation-in-file~.

#+vindex: tlon-fix-italian-translation
+ ~tlon-fix-italian-translation~ :: A constant alist of `(SEARCH-REGEXP . REPLACE-STRING)` pairs defining common fixes specific to Italian text. Used by ~tlon-fix-italian-translation~ via ~tlon-fix-translation-in-file~.

#+vindex: tlon-fix-translations
+ ~tlon-fix-translations~ :: A constant alist mapping language codes (e.g., "fr", "it") to the variables containing their respective fix lists (e.g., `"fr" . tlon-fix-french-translation`). Used by ~tlon-fix-translation~ to find the correct set of rules for a given language.
