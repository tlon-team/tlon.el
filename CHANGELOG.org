#+title: tlon change log
#+author: Pablo Stafforini
#+langauge: en

This document summarizes the changes pertaining to the ~tlon~ package.

* Version 1.7.1 on 2025-03-04
** AI Integration (tlon-ai)
:PROPERTIES:
:CUSTOM_ID: ai-integration-tlon-ai
:END:
- Set summarization model from Claude to Gemini (=gemini-2.0-flash-thinking-exp-01-21=)
- Added audio transcription functionality with =tlon-transcribe-audio= using OpenAI's Whisper API
- Autoloaded various functions like =tlon-md-read-content=, =tlon-looking-at-tag-p=, etc.

** Bug Reports (tlon-forg)
:PROPERTIES:
:CUSTOM_ID: bug-reports-tlon-forg
:END:
- Added functionality to prepopulate bug report buffers with standard templates

** Clock & Reporting (tlon-report, tlon-clock)
:PROPERTIES:
:CUSTOM_ID: clock-reporting-tlon-report-tlon-clock
:END:
- Added comprehensive clock report functionality to aggregate and analyze time data (=tlon-clock-report-create=)

** Repositories (tlon-repos, tlon-core)
:PROPERTIES:
:CUSTOM_ID: repositories-tlon-repos-tlon-core
:END:
- Added "web-server" to =tlon-repos=
- Improved repository management including cloning notification ("asynchronously...")
- Added =tlon-forge-track-repo= for easier tracking of repos in Forge database
- Enhanced generation of completion candidates for repos
- Fixed =tlon-delete-local-repo= to return only local Tlön repos

** Interface Improvements
:PROPERTIES:
:CUSTOM_ID: interface-improvements
:END:
- Added =tlon-url-menu= with commands for archived URLs and URL replacements

** Internationalization and TTS
:PROPERTIES:
:CUSTOM_ID: internationalization-and-tts
:END:
- Added missing translations in Korean, Japanese & Arabic for exponents and numbers
- Clarified docstrings and fixed typos

** Code Quality and Configuration
:PROPERTIES:
:CUSTOM_ID: code-quality-and-configuration
:END:
- Set fill-column to 80 across all files
- Updated copyright year to 2025
- Autoloaded various functions to improve performance
- Silenced byte-compiler warnings
- Fixed or improved several docstrings
- Applied file-local variables to standardize formatting

** URL Management
:PROPERTIES:
:CUSTOM_ID: url-management
:END:
- Added =tlon-url-menu= for URL-related operations
- Added =tlon-replace-url-across-projects= to replace dead URLs globally

* Version 1.6.7 on 2024-12-06
** Core Infrastructure
*** tlon-core
- Added error handling for JSON parsing with =tlon-read-json=
- Moved function out of =with-eval-after-load= block and required =json= package
- Improved JSON error handling behavior to:
  - Search for valid JSON in buffer
  - Always show error messages (removed =tlon-debug= condition)

*** tlon-dispatch
- Removed obsolete "edit data" menu
- Preserved core dispatcher functionality

** API and Integration
*** tlon-api
- Updated local URL value to =https://local-dev.altruismoeficaz.net/=

** AI and Language Processing 
*** tlon-ai
- Improved markdown formatting prompt to handle single-word paragraphs
- Allowed =tlon-ai-fix-markdown-format= to run from English buffer
- Enhanced docstring for abstract generation
- Made changes to handle errors in AI formatting tasks

*** tlon-deepl
- Updated to use =tlon-read-json= for reading JSON data

** File and Data Management
*** tlon-glossary
- Switched to =tlon-read-json= for reading JSON files
- Improved documentation for glossary extraction functionality

*** tlon-tex
- Added 5-second timeout for zotra abstract fetching to prevent hanging

* Version 1.6.5 on 2024-11-29
** tlon-ai
- Enhanced error handling in =tlon-ai-fix-markdown-format= by adding retry logic for failed paragraphs (up to 3 attempts)
- Added validation to ensure the command runs only on non-English Markdown files

** tlon-deepl
- Modified glossary handling to prompt user rather than abort when no glossary is found
- Added user confirmation before proceeding without a glossary for supported languages

** tlon-counterpart
- Major refactoring of paragraph counting functionality:
  - Renamed =tlon-count-paragraphs= to =tlon-get-number-of-paragraphs=
  - Enhanced =tlon-with-paragraphs= to optionally return paragraph positions
  - Fixed broken functionality in =tlon-open-counterpart-dwim= for moving point to corresponding paragraphs
  - Adjusted offset calculation for between-paragraph positions

** tlon-count
- Minor enhancement: Added autoload for =dired-get-marked-files=

The changes focus on three main areas:
1. Improved error handling and validation in AI/translation workflows
2. Better user experience with more prompts instead of hard failures
3. Significant refactoring of paragraph handling functionality

* Version 1.6.4 on 2024-11-25
** Core changes
*** tlon-core
- Retired package with functionality moved to =tlon=
- Added =tlon.el= repo to repository list
- Enclosed some functions in =eval-after-load=

** YAML processing 
*** tlon-yaml
- Revised and redefined =tlon-yaml-get-key-values= for metadata fields
- Updated =tlon-yaml-article-keys= to include translation keys
- Removed space between metadata delimiters
- Improved =tlon-yaml-get-original-path= functionality
- Revised field insertion and handling functionality

** UI Enhancements
*** Directory Locals
- Added .dir-locals.el to disable jinx-mode for Korean & Arabic, since Aspell does not support these languages (!)

** Repository Management
*** tlon-repos
- Revised repos menu structure and organization
- Added bug reporting functionality: ~H-r !~
- Improved repo handling logic

** Text-to-Speech 
*** tlon-tts
- Added translations for all prompts in multiple languages
- Sorted prompts alphabetically
- Disabled voice tag for Azure (this is officially supported but was not working)
- Improved chunk processing and error handling

** Meeting Features
*** tlon-meet
- Improved issue handling and formatting
- Enhanced buffer naming logic

** Code Organization
- Multiple refactoring changes across packages
- Improved docstrings and comments
- Reorganized functions into more logical groupings

** Breaking Changes
- YAML field handling has been significantly revised
- A few repository management commands have new key bindings
- Minor TTS voice functionality changes for Azure

* Version 1.6.3 on 2024-11-22
** Core functionality
*** tlon-core
- Fixed bug in ~tlon-get-file-with-org-id~ function
- Removed elpaca requirement, now using hardcoded package directory
- Enhanced autoloading of functions
- Set JSON variable values explicitly as workaround for initialization issue in ~json-read-file~

** Authentication & Version Control 
*** tlon-repos
- Improved autoloading of forge and pass-extras functions
- Refined repository tracking and git-crypt unlocking functionality

** UI Improvements
*** File Headers
- Removed redundant version and homepage information from multiple file headers to reduce duplication
- Standardized header format across files

** Text Processing
*** tlon-tts
- Commented out problematic XML escaping function that was breaking SSML tags
- Improved number separator handling with language-aware patterns

** Language & Translation
*** tlon-counterpart
- Added documentation for function arguments
- Improved autoloading of utility functions

** AI Integration  
*** tlon-ai
- Improved markdown formatting prompt for better translation handling
- Enhanced autoloading of gptel and other AI-related functions
- Added documentation for math expression language parameter

** Build & Dependencies
- Significantly revised requirements and autoloads across multiple files
- Replaced many ~require~ statements with autoload declarations
- Updated references and package descriptions to reflect "Tlön" branding

* Version 1.6.2 on 2024-11-20
** AI/Language Model Integration (~tlon-ai.el~)
*** Math Translation Enhancements
- Added support for math conversion to LaTeX
- Created new functions ~tlon-ai-convert-math~ and ~tlon-ai-process-math~
- Improved math translation prompt formatting

*** Code Organization
- Added ~tlon-ai-maybe-edit-prompt~ helper function
- Improved context management by restoring original context after completion
- Added ability to change model directly from menu
- Revised functionality to handle language detection and model selection

** Core Functionality (~tlon-core.el~)
*** Language Handling Improvements
- Renamed and relocated ~tlon-ai-get-language-in-file~ to ~tlon-get-language-in-file~
- Added better error handling for language detection
- Added ~tlon-get-language-in-mode~ function for mode-specific language detection

** DeepL Integration (~tlon-deepl.el~)
- Modified error handling to only throw errors for missing glossaries in supported languages

* Version 1.6.1 on 2024-11-19
** AI and Language Models
*** tlon-ai
- Changed default summarization model from Gemini to Claude Haiku
- Added functionality to insert math translations as alt text values
- Fixed and improved math translation features

*** deepl
- Added prompting for both source and target languages in ~tlon-deepl-translate~
- Added support for glossary languages with new constant ~tlon-deepl-supported-glossary-languages~

** Git and Repository Management
*** tlon-repos
- Added ~tlon-unlock-uqbar-git-crypt~ function and menu item for unlocking git-crypt repos
- Updated ~tlon-forge-search~ functionality to be more efficient
- Fixed async behavior messaging for cloning repos

*** forge
- Revised Forge menu structure and search functionality
- Improved cross-repo search capabilities

** Infrastructure and Core
*** tlon-core
- Added new prompt argument to ~tlon-select-language~ for more flexible language selection

*** tlon-api
- Updated local URL from "https://uqbar.local.dev/" to "https://uqbar.local"

** Text Processing and Markdown
*** tlon-md
- Improved handling of non-valued attributes in tags
- Added functionality to work with tag attribute values
- Fixed tag editing functionality

*** tlon-tts
- Added XML special character escaping functionality for SSML
- Updated text processing pipeline order

* Version 1.5.15 on 2024-11-01
** Core Changes
*** tlon-core
- Enhanced language support by adding Arabic, Korean and Japanese translations for bare directories
- Fixed ~tlon-get-language~ to properly handle error cases when repo is not found
- Added new repo "uqbar-audio" with content type audio

*** tlon-tts
- Major change in audio file handling:
  - Removed server upload functionality
  - Now moves files to a dedicated audio repo instead
  - Simplified directory structure and file management
  - Breaking change: ~tlon-tts-upload-audio-file-to-server~ replaced by ~tlon-tts-move-file-to-audio-server~

** User Interface Improvements
*** tlon-ai 
- Added ability to edit prompts before sending to AI model with new ~tlon-ai-edit-prompt~ option
- Improved image description functionality:
  - Now uses gptel instead of chatgpt-shell for image handling
  - Enhanced multilingual support with prompts in multiple languages
- Menu reorganization:
  - Grouped related commands together
  - Added new general options section
  - Renamed toggle infixes for consistency

*** tlon-repos
- Enhanced forge search functionality:
  - Added feedback on search results
  - Fixed issues with repos containing zero issues
  - Added repository tracking management to menu
  - User interface improvements in search results display

** Bug Fixes and Performance Improvements
- Multiple improvements to menu organization and command naming
- Fixed forge search functionality to handle edge cases
- Added support for tracking repositories and managing issues

The most significant breaking changes are in the TTS module's file handling system and some command renames in the AI module. Users should particularly note the change from server uploads to local repo management for audio files.
* Version 1.3.0 on 2024-05-02
** tlon-ai
  - Added functions for handling language detection and translations.
  - Integrated AI functionality more deeply with Emacs event hooks.

** tlon-api
  - Adjusted API request functionalities to align with new backend changes.
  - Enhanced error handling and added user feedback for failed API calls.

** tlon-cleanup
  - Improved automatic cleanup operations during file save.
  - Added functions for specific cleanup tasks to improve modularity.

** tlon-core
  - Reorganized code to separate concerns more clearly.
  - Enhanced repository management functions, improving support for multi-repository setups.

** tlon-counterpart
  - Added error handling for counterpart file operations.
  - Refactored file comparison functionalities for clarity and performance.

** tlon-deepl
  - Introduced robust translation features using the DeepL API.
  - Implemented new interactive commands for accessing DeepL services directly from Emacs.

** tlon-dispatch
  - Reorganized dispatch menu for better navigation.
  - Added new dispatch commands for recently introduced features.

** tlon-docs
  - Updated documentation generation processes to include new functionalities.
  - Improved automated generation of info nodes and online documentation.

** tlon-glossary
  - Enhanced glossary management with new interactive functions.
  - Implemented a more robust storage mechanism for glossary items.

** tlon-import
  - Improved import functions for new file formats.
  - Added automation features to streamline the importing process.

** tlon-jobs
  - Added detailed job tracking and management functionalities.
  - Enhanced interaction with external job management tools.

** tlon-md
  - Extended Markdown support with new editing and preview features.
  - Enhanced performance and usability of Markdown operations.

** tlon-meet
  - Introduced new functionalities for managing meetings directly from Emacs.
  - Enhanced integration with calendar and scheduling tools.

** tlon-read
  - Implemented new features for reading text directly in Emacs using TTS.
  - Enhanced customization options for voice and reading speed.

** tlon-refs
  - Improved reference management with new linking and tracking features.
  - Added support for new citation formats and external databases.

** tlon-repos
  - Added functions for managing multiple repositories more effectively.
  - Enhanced repository setup and teardown processes.

** tlon-tex
  - Improved LaTeX integration with new tools for managing TeX projects.
  - Enhanced compilation and preview features for LaTeX documents.

** tlon-tts
  - Added comprehensive Text-to-Speech (TTS) support.
  - Implemented new TTS functionalities integrated with Emacs audio facilities.

** tlon-words
  - Enhanced word count functionalities with new interactive features.
  - Improved performance and accuracy of word counting.

** tlon-yaml
  - Improved YAML handling with new parsing and editing features.
  - Added support for new YAML standards and external tools.

** tlon
  - Major refactoring to improve performance and modularity.
  - Added new top-level commands and enhanced existing functionalities.
